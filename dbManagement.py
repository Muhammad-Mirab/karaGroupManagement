import sqlite3


class dbManager:
    def __init__(self) -> None:
        self.con = sqlite3.connect("KaraGroups.db", check_same_thread = False)
        self.cur = self.con.cursor()

        # cur.execute("INSERT INTO groupSettings(groupID, welcomeMessage) VALUES ('1', 'Ø³Ù„Ø§Ù…ØŒ Ù‡Ù…Ú©Ø§Ø± / Ø¯ÙˆØ³Øª Ú¯Ø±Ø§Ù…ÛŒ [ÛŒÙˆØ²Ø± Ø¬Ø¯ÛŒØ¯] Ø¨Ù‡ ØªÛŒÙ… [Ø§Ø³Ù… Ú¯Ø±ÙˆÙ‡] Ø®ÙˆØ´ Ø§ÙˆÙ…Ø¯ÛŒðŸŒ¹ \n Ù…Ù† Ø±Ø¨Ø§Øª Ú©Ø§Ø±Ø§ Ù‡Ø³ØªÙ…ØŒ ÛŒÚ© Ø±Ø¨Ø§Øª Ù…Ø¯ÛŒØ±ÛŒØª Ú¯Ø±ÙˆÙ‡ Ùˆ Ù¾Ø±ÙˆÚ˜Ù‡ Ø§Ø² Ø±Ø§Ù‡ Ø¯ÙˆØ± Ú©Ù‡ Ù…ÛŒØªÙˆÙ†ÛŒ Ø§Ø² Ø·Ø±ÛŒÙ‚ Ø¯Ú©Ù…Ù‡ Ø²ÛŒØ± Ø¨Ø§Ù‡Ø§Ø´ Ø¢Ø´Ù†Ø§ Ø¨Ø´ÛŒ Ùˆ Ø·Ø±Ø² Ú©Ø§Ø± Ø¨Ø§Ù‡Ø§Ø´ Ø±Ùˆ ÛŒØ§Ø¯ Ø¨Ú¯ÛŒØ±ÛŒ :)') ")
        # con.commit()
    def getChatID(self, groupId):
        chat_idDB = str(groupId).split("-")
        return f"Minus{chat_idDB[1]}" if chat_idDB[0] == "" else chat_idDB[0]
    def firstMessageEditID(self, chatID, messageID):
        self.cur.execute(f"INSERT or IGNORE INTO firstMessageQueue VALUES ('{chatID}', '{messageID}')")
        self.con.commit()
    def getFirstMessageEditID(self, chatID):
        self.cur.execute(f"SELECT messageID From firstMessageQueue WHERE chatID='{chatID}'")
        return [i[0] for i in self.cur.fetchall()]
    def removeFirstMessageEditID(self, chatID):
        self.cur.execute(f"DELETE FROM firstMessageQueue WHERE chatID = {chatID}")
        self.con.commit()
    def getAvailableGroupsID(self):
        self.cur.execute("SELECT groupID FROM groupSettings")
        return [i[0] for i in self.cur.fetchall()]
    def addToGroupSettings(self, groupID):
        defaultIsWelcomeEnabled = 1
        defaultWelcomeMessage = f'Ø³Ù„Ø§Ù…ØŒ Ù‡Ù…Ú©Ø§Ø± / Ø¯ÙˆØ³Øª Ú¯Ø±Ø§Ù…ÛŒ [Ú©Ø§Ø±Ø¨Ø±] Ø¨Ù‡ ØªÛŒÙ… Ø®ÙˆØ´ Ø§ÙˆÙ…Ø¯ÛŒðŸŒ¹ \n Ù…Ù† Ø±Ø¨Ø§Øª Ú©Ø§Ø±Ø§ Ù‡Ø³ØªÙ…ØŒ ÛŒÚ© Ø±Ø¨Ø§Øª Ù…Ø¯ÛŒØ±ÛŒØª Ú¯Ø±ÙˆÙ‡ Ùˆ Ù¾Ø±ÙˆÚ˜Ù‡ Ø§Ø² Ø±Ø§Ù‡ Ø¯ÙˆØ± Ú©Ù‡ Ù…ÛŒØªÙˆÙ†ÛŒ Ø§Ø² Ø·Ø±ÛŒÙ‚ Ø¯Ú©Ù…Ù‡ Ø²ÛŒØ± Ø¨Ø§Ù‡Ø§Ø´ Ø¢Ø´Ù†Ø§ Ø¨Ø´ÛŒ Ùˆ Ø·Ø±Ø² Ú©Ø§Ø± Ø¨Ø§Ù‡Ø§Ø´ Ø±Ùˆ ÛŒØ§Ø¯ Ø¨Ú¯ÛŒØ±ÛŒ :)'
        self.cur.execute(f"INSERT or IGNORE INTO groupSettings VALUES ('{groupID}', {defaultIsWelcomeEnabled}, '{defaultWelcomeMessage}')")
        self.con.commit()
    def checkWetherGroupSettingIsSet(self, chatID, attribute):
        self.cur.execute(f"SELECT {attribute} FROM groupSettings WHERE groupID='{chatID}'")
        return [i[0] for i in self.cur.fetchall()]
# dbManagemerCls = dbManager()

# wetherWelcomeIsEnabled = dbManagemerCls.checkWetherGroupSettingIsSet(1, "isWelcomeEnabled")
# print(f"is welcome enabled: {wetherWelcomeIsEnabled}")